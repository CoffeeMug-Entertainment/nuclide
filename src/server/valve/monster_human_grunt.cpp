/*
 * Copyright (c) 2016-2019 Marco Hladik <marco@icculus.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*QUAKED monster_human_grunt (0 0.8 0.8) (-16 -16 0) (16 16 72)

HECU - Human Grunt

*/

enum {
	GR_WALK,
	GR_RUN,
	GR_VICTORYDANCE,
	GR_COWER,
	GR_FLINCH,
	GR_LEFTLEGFLINCH,
	GR_RIGHTLEGFLINCH,
	GR_RIGHTARMFLINCH,
	GR_LEFTARMFLINCH,
	GR_LAUNCHNADE,
	GR_THROWNADE,
	GR_IDLE1,
	GR_IDLE2,
	GR_COMBATIDLE,
	GR_FRONTKICK,
	GR_CROUCHIDLE,
	GR_CROUCHWAIT,
	GR_CROUCHSHOOTMP5,
	GR_STANDSHOOTMP5,
	GR_RELOADMP5,
	GR_CROUCHSHOOTSG,
	GR_STANDSHOOTSG,
	GR_RELOADSG,
	GR_SIGNALADV,
	GR_SIGNALFLANK,
	GR_SIGNALRETREAT,
	GR_DROPNADE,
	GR_LIMPWALK,
	GR_LIMPRUN,
	GR_TURNLEFT,
	GR_TURNRIGHT,
	GR_STRAFELEFT,
	GR_STRAFERIGHT,
	GR_DIEBACK,
	GR_DIEFORWARD,
	GR_DIE,
	GR_DIEBACK2,
	GR_DIEHS,
	GR_DIEGUT,
	GR_BARNACLE1,
	GR_BARNACLE2,
	GR_BARNACLE3,
	GR_BARNACLE4,
	GR_DEADSTOMACH,
	GR_DEADSTOMACH2,
	GR_DEADSIDE,
	GR_DEADSITTING,
	GR_REPELJUMP,
	GR_REPEL,
	GR_REPELSHOOT,
	GR_REPELLAND,
	GR_REPELDIE,
	GR_DRAGHOLEIDLE,
	GR_DRAGHOLE,
	GR_BUSTWALL,
	GR_HOPRAIL,
	GR_CONVERSE1,
	GR_CONVERSE2,
	GR_STARTLELEFT,
	GR_STRRTLERIGHT,
	GR_DIVE,
	GR_DEFUSE,
	GR_CORNER1,
	GR_CORNER2,
	GR_STONETOSS,
	GR_CLIFFDIE,
	GR_DIVESIDEIDLE,
	GR_DIVESIDE,
	GR_DIVEKNEELIDLE,
	GR_DIVEKNEEL,
	GR_WMBUTTON,
	GR_WM,
	GR_WMJUMP,
	GR_BUSTWINDOW,
	GR_DRAGLEFT,
	GR_DRAGRIGHT,
	GR_TRACKWAVE,
	GR_TRACKDIVE,
	GR_FLYBACK,
	GR_IMPALED,
	GR_JUMPTRACKS,
	GR_THROWPIPE,
	GR_PLUNGER
};

/* chat & idle sounds are handled via sentences.txt */

string gr_snddie[] = {
	"hgrunt/gr_die1.wav",
	"hgrunt/gr_die2.wav",
	"hgrunt/gr_die3.wav"
};

string gr_sndpain[] = {
	"hgrunt/gr_pain1.wav",
	"hgrunt/gr_pain2.wav",
	"hgrunt/gr_pain3.wav",
	"hgrunt/gr_pain4.wav",
	"hgrunt/gr_pain5.wav"
};

class monster_human_grunt:CBaseMonster
{
	void() monster_human_grunt;
};

void monster_human_grunt::monster_human_grunt(void)
{
	netname = "Grunt";
	model = "models/hgrunt.mdl";
	base_health = Skill_GetValue("hgrunt_health");
	base_mins = [-16,-16,0];
	base_maxs = [16,16,72];
	CBaseMonster::CBaseMonster();
}
