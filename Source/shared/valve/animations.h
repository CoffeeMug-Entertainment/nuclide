/***
*
*	Copyright (c) 2016-2019 Marco 'eukara' Hladik. All rights reserved.
*
*	See the file LICENSE attached with the sources for usage details.
*
****/

enum {
	ANIM_LOOKIDLE,
	ANIM_IDLE,
	ANIM_DEEPIDLE,
	ANIM_RUN2,
	ANIM_WALK2HANDED,
	ANIM_2HANDSHOT,
	ANIM_CRAWL,
	ANIM_CROUCHIDLE,
	ANIM_JUMP,
	ANIM_LONGJUMP,
	ANIM_SWIM,
	ANIM_TREADWATER,
	ANIM_RUN,
	ANIM_WALK,
	ANIM_AIM2,
	ANIM_SHOOT2,
	ANIM_AIM1,
	ANIM_SHOOT1,
	ANIM_DIESIMPLE,
	ANIM_DIEBACKWARDS1,
	ANIM_DIEBACKWARDS2,
	ANIM_DIEFORWARD,
	ANIM_DIEHEADSHOT,
	ANIM_DIESPIN,
	ANIM_DIEGUTSHOT,
	ANIM_AIMCROWBAR,
	ANIM_SHOOTCROWBAR,
	ANIM_CR_AIMCROWBAR,
	ANIM_CR_SHOOTCROWBAR,
	ANIM_AIMTRIPMINE,
	ANIM_SHOOTTRIPMINE,
	ANIM_CR_AIMTRIPMINE,
	ANIM_CR_SHOOTTRIPMINE,
	ANIM_AIM1HAND,
	ANIM_SHOOT1HAND,
	ANIM_CR_AIM1HAND,
	ANIM_CR_SHOOT1HAND,
	ANIM_AIMPYTHON,
	ANIM_SHOOTPYTHON,
	ANIM_CR_AIMPYTHON,
	ANIM_CR_SHOOTPYTHON,
	ANIM_AIMSHOTGUN,
	ANIM_SHOOTSHOTGUN,
	ANIM_CR_AIMSHOTGUN,
	ANIM_CR_SHOOTSHOTGUN,
	ANIM_AIMGAUSS,
	ANIM_SHOOTGAUSS,
	ANIM_CR_AIMGAUSS,
	ANIM_CR_SHOOTGAUSS,
	ANIM_AIMMP5,
	ANIM_SHOOTMP5,
	ANIM_CR_AIMMP5,
	ANIM_CR_SHOOTMP5,
	ANIM_AIMRPG,
	ANIM_SHOOTRPG,
	ANIM_CR_AIMRPG,
	ANIM_CR_SHOOTRPG,
	ANIM_AIMEGON,
	ANIM_SHOOTEGON,
	ANIM_CR_AIMEGON,
	ANIM_CR_SHOOTEGON,
	ANIM_AIMSQUEAK,
	ANIM_SHOOTSQUEAK,
	ANIM_CR_AIMSQUEAK,
	ANIM_CR_SHOOTSQUEAK,
	ANIM_AIMHIVE,
	ANIM_SHOOTHIVE,
	ANIM_CR_AIMHIVE,
	ANIM_CR_SHOOTHIVE,
	ANIM_AIMBOW,
	ANIM_SHOOTBOW,
	ANIM_CR_AIMBOW,
	ANIM_CR_SHOOTBOW
};

typedef struct {
	string name;
	float start;
	float end;
} q2_anim_t;

q2_anim_t q2_anims[] = {
	{ "stand", 0, 39 },
	{ "run", 40, 45 },
	{ "attack", 46, 53 },
	{ "pain1", 54, 57 },
	{ "pain2", 58, 65 },
	{ "jump", 66, 71 },
	{ "flip", 72, 83 },
	{ "salute", 84, 94 },
	{ "taunt", 95, 111 },
	{ "wave", 112, 122 },
	{ "point", 123, 134 },
	{ "cr_stand", 135, 153 },
	{ "cr_walk", 154, 159 },
	{ "cr_attack", 160, 168 },
	{ "cr_pain", 169, 172 },
	{ "cr_death", 173, 177 },
	{ "death1", 178, 183 },
	{ "death2", 184, 189 },
	{ "death2", 190, 197 }
};

enum {
	Q2ANIM_STAND,
	Q2ANIM_RUN,
	Q2ANIM_ATTACK,
	Q2ANIM_PAIN1,
	Q2ANIM_PAIN2,
	Q2ANIM_JUMP,
	Q2ANIM_FLIP,
	Q2ANIM_SALUTE,
	Q2ANIM_TAUNT,
	Q2ANIM_WAVE,
	Q2ANIM_POINT,
	Q2ANIM_CR_STAND,
	Q2ANIM_CR_WALK,
	Q2ANIM_CR_ATTACK,
	Q2ANIM_CR_PAIN,
	Q2ANIM_CR_DEATH,
	Q2ANIM_DEATH1,
	Q2ANIM_DEATH2,
	Q2ANIM_DEATH3,
};

enum {
	PLAYERTYPE_HL,
	PLAYERTYPE_Q2
};

void Animation_PlayerTop(float);
void Animation_PlayerTopTemp(float, float);